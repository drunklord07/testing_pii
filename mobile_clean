import os
import re
import shutil
from tqdm import tqdm

# ========= USER CONFIG =========
INPUT_FOLDER = "your_folder_path_here"  # <--- Put your path here
OUTPUT_FOLDER = "output_mobile_sanitized"
SUMMARY_FILE = "summary.txt"
# ===============================

os.makedirs(OUTPUT_FOLDER, exist_ok=True)

def is_valid_mobile(number: str) -> bool:
    return (
        re.fullmatch(r'(91)?[6-9]\d{9}', number) is not None
        and not re.search(r'[A-Za-z]', number)
    )

files = [f for f in os.listdir(INPUT_FOLDER) if f.endswith(".txt")]

lines_scanned = 0
mobiles_removed = 0
mobiles_retained = 0
lines_removed = 0
files_scanned = 0

for file in tqdm(files, desc="Processing files"):
    files_scanned += 1
    input_path = os.path.join(INPUT_FOLDER, file)
    output_path = os.path.join(OUTPUT_FOLDER, file)

    with open(input_path, "r", encoding="utf-8", errors="ignore") as infile, \
         open(output_path, "w", encoding="utf-8") as outfile:

        for line in infile:
            lines_scanned += 1
            parts = line.strip().split(";")
            new_parts = []
            i = 0

            found_valid_mobile = False
            found_invalid_mobile = False
            found_other_regex = False

            while i < len(parts):
                if i+2 < len(parts) and parts[i] == "no_field" and parts[i+2] == "MOBILE_REGEX":
                    mobile_candidate = parts[i+1].strip()
                    if is_valid_mobile(mobile_candidate):
                        found_valid_mobile = True
                        mobiles_retained += 1
                        new_parts.extend(parts[i:i+3])
                    else:
                        found_invalid_mobile = True
                        mobiles_removed += 1
                    i += 3
                else:
                    if i+2 < len(parts) and parts[i] == "no_field" and parts[i+2] != "MOBILE_REGEX":
                        found_other_regex = True
                    new_parts.append(parts[i])
                    i += 1

            # Remove full line if it had only invalid mobile regex and nothing else
            if found_invalid_mobile and not found_valid_mobile and not found_other_regex:
                lines_removed += 1
                continue

            cleaned = ";".join(new_parts).strip(";")
            outfile.write(cleaned + "\n")

# Write summary
with open(SUMMARY_FILE, "w", encoding="utf-8") as f:
    f.write("Summary of MOBILE_REGEX Cleanup\n")
    f.write("==================================\n")
    f.write(f"Input folder                  : {INPUT_FOLDER}\n")
    f.write(f"Output folder                 : {OUTPUT_FOLDER}\n")
    f.write(f"Files scanned                 : {files_scanned}\n")
    f.write(f"Lines scanned                 : {lines_scanned}\n")
    f.write(f"Valid MOBILE_REGEX retained   : {mobiles_retained}\n")
    f.write(f"Invalid MOBILE_REGEX removed  : {mobiles_removed}\n")
    f.write(f"Lines removed (only invalid)  : {lines_removed}\n")
